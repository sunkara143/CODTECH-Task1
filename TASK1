/*  TASK1  */
 module logic_gates(input a,b,output  y1,y2,y3,y4);
assign y1=a & b;
assign y2=a | b;
assign y3=a ^ b;
assign y4= ~a;     
endmodule

module logic_tb;
reg a,b;
wire y1,y2,y3,y4;
logic_gates dut (a,b,y1,y2,y3,y4)
initial begin
$monitor("a=%b,b=%b,y1=%b",y2=%b",y3=%b",y4=%b",a,b,y1,y2,y3,y4);
a=0;b=0;#100;
a=0;b=1;#100;
a=1;b=0;#100;
a=1;b=1;#100;
end
endmodule
-------------------------------------------------------------------------
module half_adder(input a,b,output s,c);
assign s= a ^ b;
assign c= a & b;
endmodule

module hatb;
reg a,b;
wire s,c;
half_adder dut(a,b,s,c);
initial begin
$monitor("a=%b,b=%b,s=%b,c=%b",a,b,s,c);
a=0;b=0;#100;
a=0;b=1;#100;
a=1;b=0;#100;
a=1;b=1;#100;
end 
endmodule
-------------------------------------------------------------------------
module full_adder(input a,b,c,output sum, cout);
assign sum= a ^ b ^ c;
assign cout= (a&b)|(b&c)|(c&a);
endmodule

module fatb;
reg a,b,c;
wire s,c;
full_adder dut (a,b,c,s,c);
initial begin
$monitor ("a=%b,b=%b,c=%b,s=%b,c=%b",a,b,c,sum,cout);
a=0;b=0;c=0;#100;
a=0;b=0;c=1;#100;
a=0;b=1;c=0;#100;
a=0;b=1;c=1;#100;
a=1;b=0;c=0;#100;
a=1;b=0;c=1;#100;
a=1;b=1;c=0;#100;
a=1;b=1;c=1;#100;
end
endmodule
-------------------------------------------------------------------------
module mux8x1(a,b,c,d,e,f,g,h,s,y);
input a,b,c,d,e,f,g,h;
input [2:0]s;
output y;
wire [10:0]w;
not(w[0],s[0]);
not(w[1],s[1]);
not(w[2],s[2]);
and(w[3],w[2],w[1],w[0],a);
and(w[4],w[2],w[1],s[0],b);
and(w[5],w[2],s[1],w[0],c);
and(w[6],w[2],s[1],s[0],d);
and(w[7],s[2],w[1],w[0],e);
and(w[8],s[2],w[1],s[0],f);
and(w[9],s[2],s[1],w[0],g);
and(w[10],s[2],s[1],s[0],h);
or(y,w[3],w[4],w[5],w[6],w[7],w[8],w[9],w[10]);
endmodule

module mux8x1tb;
reg a,b,c,d,e,f,g,h;
reg [2:0]s;
wire y;
mux8x1 dut(a,b,c,d,e,f,g,h,s,y);
initial begin
$monitor("a=%b;b=%b;c=%b;d=%b;e=%b;f=%b;g=%b;h=%b;s=%b;y=%b",a,b,c,d,e,f,g,h,s,y);
a=1;b=0;c=0;d=0;e=0;f=0;g=0;h=0;s=3'b000;#100;
a=0;b=1;c=0;d=0;e=0;f=0;g=0;h=0;s=3'b001;#100;
a=0;b=0;c=1;d=0;e=0;f=0;g=0;h=0;s=3'b010;#100;
a=0;b=0;c=0;d=1;e=0;f=0;g=0;h=0;s=3'b011;#100;
a=0;b=0;c=0;d=0;e=1;f=0;g=0;h=0;s=3'b100;#100;
a=0;b=0;c=0;d=0;e=0;f=1;g=0;h=0;s=3'b101;#100;
a=0;b=0;c=0;d=0;e=0;f=0;g=1;h=0;s=3'b110;#100;
a=0;b=0;c=0;d=0;e=0;f=0;g=0;h=1;s=3'b111;#100;
end
endmodule
------------------------------------------------------------------------


module top_module(input a,b,c,d,e,f,g,h,s[2:0],output y1,y2,y3,y4,s,c,sum,carry,y);                
    
logic_gates lg (.a(a),.b(b),.y1(y1),.y2(y2),.y3(y3),.y4(y4));
half_adder ha (.a(a),.b(b),.s(s),.c(c));
full_adder fa (.a(a),.b(b),.c(c),.sum(sum),.cout(cout));
mux8x1 mux (.a(a),.b(b),.c(c),.d(d),.e(e),.f(f),.g(g),.h(h),.s(s),.y(y));
endmodule


module top_module_tb;
reg a,b,c,d,e,f,g,h,s[2:0];
wire y1,y2,y3,y4;
wire s,c;
wire sum,cout;
wire y;
top_module uut (.a(a),.b(b),.c(c),.d(d),.e(e),.f(f),.g(g),.h(h),.s(s),.y1(y1),.y2(y2),.y3(y3),.y4(y4),.s(s),.c(c),.sum(sum),.cout(cout),.y(y));
initial begin
$monitor("a=%b b=%b c=%b d=%b e=%b f=%b g=%b h=%b s=%b | y1=%b y2=%b y3=%b y4=%b | s=%b c=%b | sum=%b cout=%b | y=%b",a,b,c,d,e,f,g,h,s,y1,y2,y3,y4,s,c,sum,cout,y);
a=1;b=0;c=0;d=0;e=0;f=0;g=0;h=0;s=3'b000;#100;
a=0;b=1;c=0;d=0;e=0;f=0;g=0;h=0;s=3'b001;#100;
a=0;b=0;c=1;d=0;e=0;f=0;g=0;h=0;s=3'b010;#100;
a=0;b=0;c=0;d=1;e=0;f=0;g=0;h=0;s=3'b011;#100;
a=0;b=0;c=0;d=0;e=1;f=0;g=0;h=0;s=3'b100;#100;
a=0;b=0;c=0;d=0;e=0;f=1;g=0;h=0;s=3'b101;#100;
a=0;b=0;c=0;d=0;e=0;f=0;g=1;h=0;s=3'b110;#100;
a=0;b=0;c=0;d=0;e=0;f=0;g=0;h=1;s=3'b111;#100;
        $stop;
    end
endmodule
